{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Mesage.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","classes","dialog","active","imgWrapper","src","alt","to","id","name","Message","message","maxLength40","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","type","Dialogs","dialogsElement","dialogsPage","dialogs","map","d","messagesElements","messages","m","contentWrapper","dialogsItems","value","sendMessage","newMessageBody","DialogsContainer","compose","connect","state","withAuthRedirect"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,WAAa,8B,8ICmBxPC,EAXI,SAACC,GAChB,OACI,sBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,UACI,qBAAKH,UAAWC,IAAQG,WAAxB,SACI,qBAAKC,IAAI,sGAAsGC,IAAI,OAEvH,cAAC,IAAD,CAASC,GAAI,YAAcR,EAAMS,GAAjC,SAAsCT,EAAMU,WCFzCC,EANC,SAACX,GACb,OACI,qBAAKC,UAAWC,IAAQU,QAAxB,SAAkCZ,EAAMY,W,iCCiC1CC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAwB,CAChDC,KAAM,wBADkBD,EAfsC,SAAChB,GAC/D,OACA,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBAAiBe,YAAY,uBAE7C,8BACI,wBAAQC,KAAK,SAAb,kCAWGC,EA7CC,SAAC3B,GACb,IAAM4B,EAAiB5B,EAAM6B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMD,GAAIuB,EAAEvB,IAASuB,EAAEvB,OAC/FwB,EAAmBjC,EAAM6B,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAE1B,OAMjG,OACI,qBAAKR,UAAWC,IAAQ4B,QAAxB,SACI,sBAAK7B,UAAWC,IAAQkC,eAAxB,UACI,qBAAKnC,UAAWC,IAAQmC,aAAxB,SACKT,IAEL,sBAAK3B,UAAWC,IAAQgC,SAAxB,UACI,8BAAMD,IACN,cAAClB,EAAD,CAAqBG,SAZf,SAACoB,GACnBtC,EAAMuC,YAAYD,EAAME,4B,uBCRnBC,EAAmBC,YAC5BC,aAPkB,SAACC,GACnB,MAAO,CACHf,YAAae,EAAMf,eAKE,CAACU,kBAC1BM,IAF4BH,CAG9Bf,GAEac","file":"static/js/3.cf5ca508.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__WDMfV\",\"contentWrapper\":\"Dialogs_contentWrapper__27IiW\",\"dialogsItems\":\"Dialogs_dialogsItems__237do\",\"active\":\"Dialogs_active__rYxHa\",\"dialog\":\"Dialogs_dialog__XMaeF\",\"messages\":\"Dialogs_messages__mXMQE\",\"imgWrapper\":\"Dialogs_imgWrapper__2UzLL\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype propsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem = (props: propsType) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <div className={classes.imgWrapper}>\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT6ihdk3wfyxmK6F0KYZeZ3D5H96vo74e1LSg&usqp=CAU\" alt=\"\"/>\r\n            </div>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\ntype propsType = {\r\n    message : string\r\n}\r\n\r\nconst Message = (props: propsType) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Mesage\";\r\nimport {DialogPageType} from \"../../redux/dialogsPageReducer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\ntype PropsType = {\r\n    dialogsPage: DialogPageType\r\n    updateNewMessageBody: (text: string) => void\r\n    sendMessage: (value: string) => void\r\n}\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst Dialogs = (props: PropsType) => {\r\n    const dialogsElement = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    const messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    const addNewMessage = (value: FormDataType) => {\r\n        props.sendMessage(value.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.contentWrapper}>\r\n                <div className={classes.dialogsItems}>\r\n                    {dialogsElement}\r\n                </div>\r\n                <div className={classes.messages}>\r\n                    <div>{messagesElements}</div>\r\n                    <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength40 = maxLengthCreator(40)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea}\r\n                   validate={[required, maxLength40]}\r\n                   name=\"newMessageBody\" placeholder=\"Enter ur message\"/>\r\n        </div>\r\n        <div>\r\n            <button type='submit'>Send message</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm<FormDataType>({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm)\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessage} from \"../../redux/dialogsPageReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootReduxState} from \"../../redux/reduxStore\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state: RootReduxState) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer"],"sourceRoot":""}